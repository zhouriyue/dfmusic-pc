<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.SongMapper">

    <resultMap type="Song" id="SongResult">
        <result property="songId"    column="song_id"    />
        <result property="songName"    column="song_name"    />
        <result property="coverPicture"    column="cover_picture"    />
        <result property="lyrId"    column="lyr_id"    />
        <result property="duration"    column="duration"    />
        <result property="standardUrl"    column="standard_url"    />
        <result property="hqUrl"    column="hq_url"    />
        <result property="sqUrl"    column="sq_url"    />
        <result property="witPreUrl"    column="wit_pre_url"    />
        <result property="mvUrl"    column="mv_url"    />
        <result property="isCharge"    column="is_charge"    />
        <result property="isCopyright"    column="is_copyright"    />
        <result property="isSingle"    column="is_single"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="delTime"    column="del_time"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="issuingDate"    column="issuing_date"    />
        <result property="todayPlay"    column="today_play"    />
        <result property="playNumber"    column="play_number"    />
        <result property="isOriginal"    column="is_original"    />
        <result property="timbreType"    column="timbre_type"    />
        <result property="lyrUrl"    column="lyr_url"    />
        <result property="detail"    column="detail"    />
        <association property="songlistes"    javaType="songlist" resultMap="SonglistResult" />
        <collection  property="singerList"   column="sin_id" javaType="java.util.List" resultMap="SingerResult"/>
        <collection  property="songTypeList"   column="st_id" javaType="java.util.List" resultMap="SongTypeResult"/>
    </resultMap>

    <resultMap type="SongType" id="SongTypeResult">
        <result property="stId"    column="st_id"    />
        <result property="stName"    column="st_name"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="delTime"    column="del_time"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <resultMap type="Songlist" id="SonglistResult">
        <result property="slId"    column="sl_id"    />
        <result property="slName"    column="sl_name"    />
        <result property="coverPicture"    column="cover_picture"    />
        <result property="slTitle"    column="sl_title"    />
        <result property="playNumber"    column="play_number"    />
        <result property="songNumber"    column="song_number"    />
        <result property="colNumber"    column="col_number"    />
        <result property="commentsNumber"    column="comments_number"    />
        <result property="shareNumber"    column="share_number"    />
        <result property="createById"    column="create_by_id"    />
        <result property="detail"    column="detail"    />
        <result property="isAlbum"    column="is_album"    />
        <result property="sinId"    column="sin_id"    />
        <result property="isPublic"    column="is_public"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="delTime"    column="del_time"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <resultMap type="Singer" id="SingerResult">
        <result property="sinId"    column="sin_id"    />
        <result property="sinName"    column="sin_name"    />
        <result property="nickname"    column="nickname"    />
        <result property="sex"    column="sex"    />
        <result property="year"    column="year"    />
        <result property="sinType"    column="sin_type"    />
        <result property="area"    column="area"    />
        <result property="songNumber"    column="song_number"    />
        <result property="followerNumber"    column="follower_number"    />
        <result property="albumNumber"    column="album_number"    />
        <result property="mvNumber"    column="mv_number"    />
        <result property="detail"    column="detail"    />
        <result property="influencePower"    column="influence_power"    />
        <result property="certInfo"    column="cert_info"    />
        <result property="earlyExp"    column="early_exp"    />
        <result property="performingExp"    column="performing_exp"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="delTime"    column="del_time"    />
    </resultMap>

    <sql id="selectSongVo">
        select song_id, song_name, cover_picture, lyr_id, duration, standard_url, hq_url, sq_url, wit_pre_url, mv_url, is_charge, is_copyright, is_single, sl_id, sin_id, create_time, update_time, del_time, del_flag, issuing_date, today_play, play_number, is_original, timbre_type, lyr_url from song
    </sql>

    <sql id="selectDetailList">
select d.song_id, d.song_name,d.cover_picture,d.duration, d.issuing_date,
d.mv_url, d.is_charge, d.is_copyright, d.is_single, d.sl_id, d.standard_url, d.hq_url,
d.sq_url, d.wit_pre_url, d.lyr_id, d.create_time, d.update_time, d.del_time, d.del_flag,
d.today_play,d.play_number,d.is_original,d.lyr_url,d.timbre_type,
d.sin_id, GROUP_CONCAT(d.sin_name) as sin_name, d.nickname, d.sex, d.year, d.sin_type, d.area,
d.song_number, d.follower_number, d.album_number, d.mv_number,d.human_qi,
d.detail, d.influence_power, d.cert_info, d.early_exp, d.performing_exp,d.cur_rank,d.last_rank,d.picture,d.sl_name
from (select s.song_id song_id, s.song_name song_name,s.cover_picture cover_picture,s.duration duration, s.issuing_date issuing_date,
        s.mv_url mv_url, s.is_charge is_charge, s.is_copyright is_copyright, s.is_single is_single, s.sl_id sl_id, s.standard_url standard_url, s.hq_url hq_url,
        s.sq_url sq_url, s.wit_pre_url wit_pre_url, s.lyr_id lyr_id, s.create_time create_time, s.update_time update_time, s.del_time del_time, s.del_flag del_flag,
        s.today_play today_play,s.play_number play_number,s.is_original is_original,s.lyr_url lyr_url,s.timbre_type timbre_type,
        sr.sin_id sin_id,sr.sin_name sin_name, sr.nickname nickname, sr.sex sex, sr.year `year`, sr.sin_type sin_type, sr.area area,
        sr.song_number song_number, sr.follower_number follower_number, sr.album_number album_number, sr.mv_number mv_number,sr.human_qi human_qi,
        sr.detail detail, sr.influence_power influence_power, sr.cert_info cert_info, sr.early_exp early_exp, sr.performing_exp performing_exp,
        sr.cur_rank cur_rank,sr.last_rank last_rank,sr.picture picture,sl.sl_name sl_name
        from song s
              left join song_singer ssr on ssr.song_id=s.song_id
              left join singer sr on ssr.sin_id=sr.sin_id
              left join song_songlist ssli on ssli.song_id=s.song_id
              left join songlist sl on sl.sl_id=ssli.sl_id
              left join song_songtype sst on s.song_id = sst.song_id
where ssli.is_album=1
GROUP BY s.song_id,sr.sin_id) d
    </sql>

    <!--获取排行榜的歌曲，信息包含歌手、专辑、类型-->
    <sql id="selectRankingSingerVo">
        select s.song_id, s.song_name,s.cover_picture,s.duration, s.issuing_date,
        s.mv_url, s.is_charge, s.is_copyright, s.is_single, s.standard_url, s.hq_url,
        s.sq_url, s.wit_pre_url, s.lyr_id, s.create_time, s.update_time, s.del_time, s.del_flag,
        s.today_play,s.play_number,s.is_original,s.lyr_url,s.timbre_type,s.detail,
        sr.sin_id, sr.sin_name, sr.nickname, sr.sex, sr.year, sr.sin_type, sr.area,
        sr.song_number, sr.follower_number, sr.album_number, sr.mv_number,sr.human_qi,
        sr.detail, sr.influence_power, sr.cert_info, sr.early_exp, sr.performing_exp,sr.update_time, sr.del_time,sr.cur_rank,sr.last_rank,sr.picture,
        sl.sl_id,sl.sl_name
        from song s
              left join song_singer ssr on ssr.song_id=s.song_id
              left join singer sr on ssr.sin_id=sr.sin_id
              left join song_songlist ssli on ssli.song_id=s.song_id
              left join songlist sl on sl.sl_id=ssli.sl_id
              left join song_songtype sst on s.song_id = sst.song_id
    </sql>

    <!--获取排行榜的歌曲，信息包含歌手、专辑、类型-->
    <sql id="selectSongAndSingerVo">
        select s.song_id, s.song_name,s.cover_picture,s.duration, s.issuing_date,
        s.mv_url, s.is_charge, s.is_copyright, s.is_single, s.standard_url, s.hq_url,
        s.sq_url, s.wit_pre_url, s.lyr_id, s.create_time, s.update_time, s.del_time, s.del_flag,
        s.today_play,s.play_number,s.is_original,s.lyr_url,s.timbre_type,s.detail,
        sr.sin_id, sr.sin_name, sr.nickname, sr.sex, sr.year, sr.sin_type, sr.area,
        sr.song_number, sr.follower_number, sr.album_number, sr.mv_number,sr.human_qi,
        sr.detail, sr.influence_power, sr.cert_info, sr.early_exp, sr.performing_exp,sr.update_time, sr.del_time,sr.cur_rank,sr.last_rank,sr.picture,
        sl.sl_id,sl.sl_name
        from song s
              left join song_singer ssr on ssr.song_id=s.song_id
              left join singer sr on ssr.sin_id=sr.sin_id
              left join song_songlist ssli on ssli.song_id=s.song_id
              left join songlist sl on sl.sl_id=ssli.sl_id
    </sql>

    <sql id="SongToSonglist">
        select s.song_id, s.song_name,s.cover_picture, s.sin_id, s.duration, s.issuing_date, s.mv_url, s.is_charge,
        s.is_copyright, s.is_single, s.sl_id, s.standard_url, s.hq_url, s.sq_url, s.wit_pre_url, s.lyr_id, s.create_time,
        s.update_time, s.del_time, s.del_flag,s.today_play,s.play_number,s.is_original,s.lyr_url,s.timbre_type
        from song s,song_songlist ssli
    </sql>

    <sql id="selectSongSingerVo">
        select sr.sin_id, sr.sin_name, sr.nickname, sr.sex, sr.year, sr.sin_type, sr.area, sr.song_number,sr.follower_number, sr.album_number, sr.mv_number, sr.detail, sr.influence_power, sr.cert_info,sr.early_exp, sr.performing_exp, sr.del_flag, sr.create_time, sr.update_time, sr.del_time from song_singer ssr,singer sr
    </sql>

    <select id="selectSongList" parameterType="Song" resultMap="SongResult">
        <include refid="selectDetailList"/>
        <where>
            <if test="songId != null "> and d.song_id = #{songId}</if>
            <if test="sinId != null "> and d.sin_id = #{sinId}</if>
            <if test="issuingDate != null "> and year(d.issuing_date) = year(#{issuingDate}) and month(d.issuing_date) = month(#{issuingDate}) and day(d.issuing_date) = day(#{issuingDate})</if>
            <if test="isCharge != null "> and d.is_charge = #{isCharge}</if>
            <if test="isCopyright != null "> and d.is_copyright = #{isCopyright}</if>
            <if test="isSingle != null "> and d.is_single = #{isSingle}</if>
            <if test="slId != null "> and d.sl_id = #{slId}</if>
            <if test="createTime != null "> and d.create_time = #{createTime}</if>
            <if test="updateTime != null "> and d.update_time = #{updateTime}</if>
            <if test="songName != null  and songName != ''"> and d.song_name like concat('%', #{songName}, '%') or d.sl_name like concat('%', #{songName}, '%') or d.sin_name like concat('%', #{songName}, '%')</if>
        </where>
        GROUP BY d.song_id
    </select>

    <select id="selectSongKey" parameterType="String" resultMap="SongResult">
        <include refid="selectSongVo"/>
        <where>
            <if test="_parameter != null  and _parameter != ''">song_name like concat('%', #{wordKey}, '%')</if>
        </where>
    </select>

    <select id="selectSongById" parameterType="Long" resultMap="SongResult">
select d.song_id, d.song_name,d.cover_picture,d.duration, d.issuing_date,
d.mv_url, d.is_charge, d.is_copyright, d.is_single, d.sl_id, d.standard_url, d.hq_url,
d.sq_url, d.wit_pre_url, d.lyr_id, d.create_time, d.update_time, d.del_time, d.del_flag,
d.today_play,d.play_number,d.is_original,
d.sin_id, d.sin_name as sin_name, d.nickname, d.sex, d.year, d.sin_type, d.area,
d.song_number, d.follower_number, d.album_number, d.mv_number,d.human_qi,
d.detail, d.influence_power, d.cert_info, d.early_exp, d.performing_exp,d.cur_rank,d.last_rank,d.picture,d.sl_name,
st.st_id, st.st_name
from (select s.song_id song_id, s.song_name song_name,s.cover_picture cover_picture,s.duration duration, s.issuing_date issuing_date,
        s.mv_url mv_url, s.is_charge is_charge, s.is_copyright is_copyright, s.is_single is_single, s.sl_id sl_id, s.standard_url standard_url, s.hq_url hq_url,
        s.sq_url sq_url, s.wit_pre_url wit_pre_url, s.lyr_id lyr_id, s.create_time create_time, s.update_time update_time, s.del_time del_time, s.del_flag del_flag,
        s.today_play today_play,s.play_number play_number,s.is_original is_original,
        sr.sin_id sin_id,sr.sin_name sin_name, sr.nickname nickname, sr.sex sex, sr.year `year`, sr.sin_type sin_type, sr.area area,
        sr.song_number song_number, sr.follower_number follower_number, sr.album_number album_number, sr.mv_number mv_number,sr.human_qi human_qi,
        sr.detail detail, sr.influence_power influence_power, sr.cert_info cert_info, sr.early_exp early_exp, sr.performing_exp performing_exp,
        sr.cur_rank cur_rank,sr.last_rank last_rank,sr.picture picture,sl.sl_name sl_name
        from song s
              left join song_singer ssr on ssr.song_id=s.song_id
              left join singer sr on ssr.sin_id=sr.sin_id
              left join song_songlist ssli on ssli.song_id=s.song_id
              left join songlist sl on sl.sl_id=ssli.sl_id
where ssli.is_album=1
GROUP BY s.song_id,sr.sin_id) d
     LEFT JOIN song_songtype sst on sst.song_id = d.song_id
     LEFT JOIN song_type st on st.st_id = sst.st_id
where d.song_id = #{songId}

    </select>

    <select id="selectAll" parameterType="Long" resultMap="SongResult">
        <include refid="SongToSonglist"/>
        where ssli.sl_id=#{slId} and s.song_id = ssli.song_id
    </select>

    <select id="selectSinger" parameterType="Long" resultMap="SingerResult">
        <include refid="selectSongSingerVo"/>
        where ssr.song_id=#{songId} and ssr.sin_id = sr.sin_id
    </select>

    <!--获取飙升歌曲-->
    <select id="getRiseSong" resultMap="SongResult">
        <include refid="selectRankingSingerVo"/>
        WHERE ssli.is_album=1
        ORDER BY s.today_play desc LIMIT 0,50
    </select>

    <!--获取新歌曲-->
    <select id="getNewSong" resultMap="SongResult">
        <include refid="selectRankingSingerVo"/>
        WHERE TO_DAYS(NOW())-TO_DAYS(issuing_date) &lt;=30 and ssli.is_album=1
        ORDER BY s.play_number desc LIMIT 0,50
    </select>

    <!--获取原创歌曲-->
    <select id="getOriginalSong" resultMap="SongResult">
        <include refid="selectRankingSingerVo"/>
        WHERE s.is_original = 1 and ssli.is_album=1
        ORDER BY s.play_number desc LIMIT 0,50
    </select>

    <!--获取原创歌曲-->
    <select id="getHotSong" resultMap="SongResult">
        <include refid="selectRankingSingerVo"/>
        WHERE ssli.is_album=1
        ORDER BY s.play_number desc LIMIT 0,50
    </select>

    <!--获取热门歌曲-->
    <select id="selectHotSong" resultMap="SongResult">
        <include refid="selectSongAndSingerVo"/>
        GROUP BY s.song_id
        ORDER BY s.play_number desc
        LIMIT #{pageNum},#{size}
    </select>

    <select id="selectTodeyHot" resultMap="SongResult">
        <include refid="selectSongAndSingerVo"/>
        GROUP BY s.song_id
        ORDER BY s.play_number desc
        LIMIT #{pageNum},#{size}
    </select>

    <insert id="insertSong" parameterType="Song" useGeneratedKeys="true" keyProperty="songId">
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="songName != null">song_name,</if>
            <if test="coverPicture != null">cover_picture,</if>
            <if test="sinId != null">sin_id,</if>
            <if test="duration != null">duration,</if>
            <if test="issuingDate != null">issuing_date,</if>
            <if test="mvUrl != null">mv_url,</if>
            <if test="isCharge != null">is_charge,</if>
            <if test="isCopyright != null">is_copyright,</if>
            <if test="isSingle != null">is_single,</if>
            <if test="slId != null">sl_id,</if>
            <if test="standardUrl != null">standard_url,</if>
            <if test="hqUrl != null">hq_url,</if>
            <if test="sqUrl != null">sq_url,</if>
            <if test="witPreUrl != null">wit_pre_url,</if>
            <if test="lyrId != null">lyr_id,</if>
            <if test="lyrUrl != null">lyr_url,</if>
            <if test="timbreType != null">timbre_type,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="delTime != null">del_time,</if>
            <if test="delFlag != null">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="songName != null">#{songName},</if>
            <if test="songName != null">#{coverPicture},</if>
            <if test="sinId != null">#{sinId},</if>
            <if test="duration != null">#{duration},</if>
            <if test="issuingDate != null">#{issuingDate},</if>
            <if test="mvUrl != null">#{mvUrl},</if>
            <if test="isCharge != null">#{isCharge},</if>
            <if test="isCopyright != null">#{isCopyright},</if>
            <if test="isSingle != null">#{isSingle},</if>
            <if test="slId != null">#{slId},</if>
            <if test="standardUrl != null">#{standardUrl},</if>
            <if test="hqUrl != null">#{hqUrl},</if>
            <if test="sqUrl != null">#{sqUrl},</if>
            <if test="witPreUrl != null">#{witPreUrl},</if>
            <if test="lyrId != null">#{lyrId},</if>
            <if test="lyrUrl != null">#{lyrUrl},</if>
            <if test="timbreType != null">#{timbreType},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="delTime != null">#{delTime},</if>
            <if test="delFlag != null">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateSong" parameterType="Song">
        update song
        <trim prefix="SET" suffixOverrides=",">
            <if test="songName != null">song_name = #{songName},</if>
            <if test="songName != null">cover_picture = #{coverPicture},</if>
            <if test="sinId != null">sin_id = #{sinId},</if>
            <if test="duration != null">duration = #{duration},</if>
            <if test="issuingDate != null">issuing_date = #{issuingDate},</if>
            <if test="mvUrl != null">mv_url = #{mvUrl},</if>
            <if test="isCharge != null">is_charge = #{isCharge},</if>
            <if test="isCopyright != null">is_copyright = #{isCopyright},</if>
            <if test="isSingle != null">is_single = #{isSingle},</if>
            <if test="slId != null">sl_id = #{slId},</if>
            <if test="standardUrl != null">standard_url = #{standardUrl},</if>
            <if test="hqUrl != null">hq_url = #{hqUrl},</if>
            <if test="sqUrl != null">sq_url = #{sqUrl},</if>
            <if test="witPreUrl != null">wit_pre_url = #{witPreUrl},</if>
            <if test="lyrId != null">lyr_id = #{lyrId},</if>
            <if test="lyrUrl != null">lyr_url = #{lyrUrl},</if>
            <if test="timbreType != null">timbre_type = #{timbreType},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="delTime != null">del_time = #{delTime},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where song_id = #{songId}
    </update>

    <update id="offSongs" parameterType="Song">
        update song
        <trim prefix="SET" suffixOverrides=",">
        <if test="isCopyright != null">is_copyright = #{isCopyright}</if>
        </trim>
        where song_id in
        <foreach item="songId" collection="songIds" open="(" separator="," close=")">
            #{songId}
        </foreach>
    </update>

    <delete id="deleteSongById" parameterType="Long">
        delete from song where song_id = #{songId}
    </delete>

    <delete id="deleteSongByIds" parameterType="String">
        delete from song where song_id in
        <foreach item="songId" collection="array" open="(" separator="," close=")">
            #{songId}
        </foreach>
    </delete>

</mapper>